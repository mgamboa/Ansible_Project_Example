# roles/vm_remove/tasks/main.yml

---
- name: Make sure requirements are met to run vmware modules PyVmomi and PyVim
  ansible.builtin.pip:
    name:
      - PyVmomi
      - PyVim
    state: present
  delegate_to: localhost

- name: Get VM info
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ datacenter_name }}"
    validate_certs: no
    name: "{{ vm_name }}"
  delegate_to: localhost
  register: vm_info
  ignore_errors: yes

- name: Display VM details
  debug:
    msg: "VM {{ vm_name }} details: {{ vm_info.instance | default('VM not found') }}"
  when: vm_info.instance is defined

- name: Remove virtual machine
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    name: "{{ vm_name }}"
    state: absent
    force: yes
  delegate_to: localhost
  when: 
    - vm_info.instance is defined
    - confirm_removal | bool


- name: VM removal status
  debug:
    msg: >
      {% if vm_info.instance is not defined %}
        VM {{ vm_name }} does not exist.
      {% elif confirm_removal | bool %}
        VM {{ vm_name }} has been removed successfully.
      {% else %}
        VM removal was not confirmed. VM {{ vm_name }} still exists.
      {% endif %}


- name: Look up inventory IDs
  set_fact:
    inventories: "{{ lookup('awx.awx.controller_api', 'inventories', host=awx_tower_url, username=awx_username, password=awx_password, verify_ssl=false) }}"

- name: Display inventory information
  debug:
    msg: "Inventory Name: {{ item.name }}, ID: {{ item.id }}, Organization: {{ item.organization }}"
  loop: "{{ inventories.results }}"
  when: inventories.results is defined

- name: Set fact for Vmware inventory ID
  set_fact:
    vmware_inventory_id: "{{ item.id }}"
  loop: "{{ inventories.results }}"
  when: item.name == 'Vmware'

- name: Display Vmware inventory ID
  debug:
    var: vmware_inventory_id
  when: vmware_inventory_id is defined

